{"version":3,"sources":["actions/index.js","components/pokemon-stats/index.js","components/pokemon-stats/pokemon-stats.js","components/pokemon-info/index.js","components/pokemon-info/pokemon-info.js","components/spinner/index.js","components/spinner/spinner.js","utilities/toast.js","components/pokemon-details/pokemon-details.js","components/pokemon-item/index.js","components/pokemon-item/pokemon-item.js","components/pokemon-service-context/pokemon-service-context.js","components/search-control/index.js","components/search-control/search-control.js","components/types-list/index.js","components/types-list/types-list.js","components/filter-control/index.js","components/filter-control/filter-control.js","components/pokemons-list/pokemon-list.js","components/pokemons-list/index.js","components/pages/pokemon-library.js","components/pages/pokemon-collection.js","components/header/index.js","components/header/header.js","utilities/get-random-int.js","components/question-cart/index.js","components/question-cart/question-cart.js","components/answer-item/index.js","components/answer-item/answer-item.js","components/answer-list/index.js","components/answer-list/answer-list.js","components/pages/pokemon-game.js","components/app/app.js","components/app/index.js","utilities/cache-decorator.js","reducers/update-pokemon-list.js","reducers/update-pokemon-details.js","reducers/update-pokemon-collection.js","reducers/update-types-list.js","reducers/update-filtered-by-type-list.js","reducers/index.js","store.js","index.js","services/pokemon-service.js"],"names":["pokemonRemoved","id","type","payload","PokemonStats","closeModal","name","stats","statsItems","map","i","stat","className","key","handleOuterClick","target","modalRef","current","contains","useRef","useEffect","document","addEventListener","removeEventListener","ref","onClick","PokemonInfo","pokemon","onClose","weight","height","backDefault","frontDefault","types","pokemonNameClassNames","pokemonContainerClassNames","useState","opened","setOpened","showModal","setShowModal","typesClassNames","modal","frontImage","src","alt","backImage","duration","length","item","idx","generateTypes","Spinner","options","hideAfter","position","successToast","text","cogoToast","success","errorToast","error","PokemonDetails","buttonClassNames","buttonText","deselectPokemon","detailsButtonHandler","withRouter","history","match","useSelector","state","pokemonDetails","loading","dispatch","useDispatch","inCollection","pokemonCollection","some","shallowEqual","removePokemon","addPokemon","pokemonAdded","push","params","page","PokemonItem","isActive","loadPokemon","classNames","pokemonContext","React","createContext","PokemonServiceProvider","Provider","SearchControl","Consumer","term","setTerm","required","value","onChange","e","TypesList","setFilterByType","filterByType","toLowerCase","FilterControl","showFilter","setShowFilter","allTypesList","typesList","PokemonListLogic","filteredPokemons","pokemons","onPage","selectPokemon","urlPokemon","setPageCount","pageCount","Math","ceil","filter","includes","showPokemons","slice","PokemonList","props","urlPage","pokemonService","useContext","allPokemonsList","allPokemons","allPokemonsLoading","allPokemonsError","filteredByTypeList","filteredList","filteredLoading","filteredError","initialPage","setPage","pageRange","setPageRange","getFilteredByTypePokemons","then","data","catch","filteredByTypeError","fetchFilteredByTypesPokemons","window","innerWidth","getPokemonDetails","pokemonError","fetchPokemon","selectPage","selected","Fragment","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","forcePage","PokemonLibrary","PokemonCollection","PokemonCollectionWrapper","result","content","Header","toggleOpened","btnClassNames","navClassNames","to","getRandomInt","max","floor","random","QuestionCart","console","log","AnswerItem","onSelect","AnswerList","items","PokemonGame","pokemonsInGameInitialState","question","gameLoading","gameError","pokemonsInGame","setPokemonsInGame","score","setScore","maxScore","setMaxScore","mounted","count","setCount","allPokemonsInGame","setAllPokemonsInGame","startGame","nextRound","loadRandomPokemons","handleSelectPokemon","a","pokemonsIDs","pokemonId","promises","Promise","all","App","getAllPokemons","pokemonsError","fetchPokemons","getAllTypes","typesError","fetchTypes","path","render","exact","component","hash","args","join","cacheDecorator","func","cache","Map","x","has","get","set","updatePokemonList","action","undefined","updatePokemonDetails","updatePokemonCollection","updateTypesList","updateFiltereByTypeList","reducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","_apiBase","_extractId","url","_transformListItem","_upFirstLetter","_transfromPokemonStats","base_stat","toUpperCase","_transformPokemonDetails","sprites","back_default","front_default","_transformTypes","fetch","response","json","res","this","results","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3a8e7211.chunk.js","sourcesContent":["const pokemonsRequested = () => {\r\n  return {\r\n    type: \"FETCH_POKEMONS_REQUEST\",\r\n  };\r\n};\r\nconst pokemonsLoaded = (newPokemons) => {\r\n  return {\r\n    type: \"FETCH_POKEMONS_SUCCESS\",\r\n    payload: newPokemons,\r\n  };\r\n};\r\nconst pokemonsError = (error) => {\r\n  return {\r\n    type: \"FETCH_POKEMONS_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\nconst typesRequested = () => {\r\n  return {\r\n    type: \"FETCH_TYPES_REQUEST\",\r\n  };\r\n}\r\nconst typesLoaded = (types) => {\r\n  return {\r\n    type: \"FETCH_TYPES_SUCCESS\",\r\n    payload: types,\r\n  };\r\n};\r\nconst typesError = (error) => {\r\n  return {\r\n    type: \"FETCH_TYPES_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\n\r\nconst filteredByTypeRequested = () => {\r\n  return {\r\n    type: \"FETCH_FILTERED_BY_TYPE_REQUEST\",\r\n  };\r\n}\r\nconst filteredByTypeLoaded = (types) => {\r\n  return {\r\n    type: \"FETCH_FILTERED_BY_TYPE_SUCCESS\",\r\n    payload: types,\r\n  };\r\n};\r\nconst filteredByTypeError = (error) => {\r\n  return {\r\n    type: \"FETCH_FILTERED_BY_TYPE_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\n\r\nconst pokemonRequested = () => {\r\n  return {\r\n    type: \"FETCH_POKEMON_REQUEST\",\r\n  };\r\n};\r\nconst pokemonLoaded = (newPokemon) => {\r\n  return {\r\n    type: \"FETCH_POKEMON_SUCCESS\",\r\n    payload: newPokemon,\r\n  };\r\n};\r\nconst pokemonError = (error) => {\r\n  return {\r\n    type: \"FETCH_POKEMON_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\n\r\nconst pokemonAdded = (pokemon) => {\r\n  return {\r\n    type: \"ADD_POKEMON_TO_COLLECTION\",\r\n    payload: pokemon,\r\n  };\r\n};\r\nconst pokemonDeselected = () => {\r\n  return {\r\n    type: \"DESELECT_POKEMON\",\r\n  }\r\n}\r\nconst pokemonRemoved = (id) => {\r\n  return {\r\n    type: \"REMOVE_POKEMON_FROM_COLLECTION\",\r\n    payload: id,\r\n  }\r\n}\r\nconst allPokemonsRemoved = () => {\r\n  return {\r\n    type: \"REMOVE_ALL_POKEMONS_FROM_COLLECTION\",\r\n  }\r\n}\r\n\r\n\r\nconst fetchPokemons = (pokemonService) => (dispatch) => {\r\n  dispatch(pokemonsRequested());\r\n  pokemonService.getAllPokemons()\r\n    .then((data) => dispatch(pokemonsLoaded(data)))\r\n    .catch((error) => dispatch(pokemonsError(error)));\r\n}\r\n\r\nconst fetchFilteredByTypesPokemons = (pokemonService) => (id) => (dispatch) => {\r\n  dispatch(filteredByTypeRequested());\r\n  pokemonService.getFilteredByTypePokemons(id)\r\n    .then((data) => dispatch(filteredByTypeLoaded(data)))\r\n    .catch((error) => dispatch(filteredByTypeError(error)));\r\n}\r\n\r\nconst fetchTypes = (pokemonService) => (dispatch) => {\r\n  dispatch(typesRequested());\r\n  pokemonService.getAllTypes()\r\n    .then((data) => dispatch(typesLoaded(data)))\r\n    .catch((error) => dispatch(typesError(error)));\r\n}\r\n\r\nconst fetchPokemon = (pokemonService) => (id) => (dispatch) => {\r\n  dispatch(pokemonRequested());\r\n  pokemonService.getPokemonDetails(id)\r\n    .then((data) => dispatch(pokemonLoaded(data)))\r\n    .catch((error) => dispatch(pokemonError(error)));\r\n}\r\n\r\nexport {\r\n  pokemonsError,\r\n  pokemonsRequested,\r\n  pokemonsLoaded,\r\n  fetchPokemons,\r\n  fetchPokemon,\r\n  pokemonAdded,\r\n  pokemonDeselected,\r\n  pokemonRemoved,\r\n  allPokemonsRemoved,\r\n  fetchTypes,\r\n  filteredByTypeRequested,\r\n  filteredByTypeError,\r\n  filteredByTypeLoaded,\r\n  fetchFilteredByTypesPokemons,\r\n}","import PokemonStats from './pokemon-stats';\r\n\r\nexport default PokemonStats;","import React, { useRef, useEffect } from 'react';\r\nimport './pokemon-stats.css';\r\n\r\nconst PokemonStats = ({ closeModal, name, stats, type }) => {\r\n  const statsItems = stats.map(({ name, stat }, i) => {\r\n    return (\r\n      <li className=\"stats-item\" key={i}>{name}: {stat}</li>\r\n    );\r\n  });\r\n  const handleOuterClick = ({ target }) => {\r\n    if (!modalRef.current.contains(target))\r\n      closeModal();\r\n  }\r\n  const modalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleOuterClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleOuterClick);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div ref={modalRef} className=\"modal\">\r\n      <i onClick={closeModal} className=\"fas fa-times close-icon\"></i>\r\n      <h2 className={type}>{name}</h2>\r\n      <ul className=\"stats-list\">\r\n        {statsItems}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonStats;","import PokemonInfo from \"./pokemon-info\";\r\n\r\nexport default PokemonInfo;","import React, { useState } from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport PokemonStats from '../pokemon-stats';\r\nimport \"./pokemon-info.css\";\r\n\r\nconst PokemonInfo = ({ pokemon, onClose }) => {\r\n  const { name, weight, height, backDefault, frontDefault, types, stats } = pokemon;\r\n  const pokemonNameClassNames = \"name \" + types[0];\r\n  const pokemonContainerClassNames = `pokemon-info  border-${types[0]}`;\r\n\r\n  const [opened, setOpened] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  let typesClassNames = \"types\";\r\n  if (opened)\r\n    typesClassNames += \" active\";\r\n\r\n  const modal = showModal ? (\r\n    <PokemonStats closeModal={() => setShowModal(false)} name={name} type={types[0]} stats={stats} />\r\n  ) : null;\r\n\r\n  const generateTypes = (types) => {\r\n    if (types.length) {\r\n      return types.map((item, idx) => {\r\n        return (\r\n          <li\r\n            className=\"pokemon-info-item second-level\"\r\n            key={item}>{idx + 1}: <span className={`${item} type-icon icon-${item}`}>{item}</span>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const toggleTypes = () => {\r\n    setOpened(!opened);\r\n  }\r\n\r\n  const frontImage = frontDefault ? <img src={frontDefault} alt=\"frontImage\" /> : null;\r\n  const backImage = backDefault ? <img src={backDefault} alt=\"backImage\" /> : null;\r\n\r\n  return (\r\n    <>\r\n      <div className={pokemonContainerClassNames}>\r\n        <i onClick={() => onClose()} className=\"fas fa-times close-icon\"></i>\r\n        <h2 className={pokemonNameClassNames}>{name}</h2>\r\n        <ul className=\"pokemon-info-list\">\r\n          <li className=\"pokemon-info-item\">Weight: {weight}</li>\r\n          <li className=\"pokemon-info-item\">Height: {height}</li>\r\n          <li className=\"pokemon-info-item\">\r\n            <span className={typesClassNames} onClick={toggleTypes}>Types:</span>\r\n            <AnimateHeight id='example-panel'\r\n              duration={500}\r\n              height={opened ? \"auto\" : 0}>\r\n              <ul className=\"pokemon-types-list\">\r\n                {generateTypes(types)}\r\n              </ul>\r\n            </AnimateHeight>\r\n          </li>\r\n\r\n        </ul>\r\n        <div className=\"sprites\">\r\n          {frontImage}\r\n          {backImage}\r\n        </div>\r\n        <button onClick={() => setShowModal(true)} className=\"btn btn-stats\">Show Stats</button>\r\n      </div>\r\n      {modal}\r\n    </>\r\n  );\r\n};\r\nexport default PokemonInfo;","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner =()=>{\r\n  return <span className=\"spinner\"></span>;\r\n};\r\n\r\nexport default Spinner;","import cogoToast from \"cogo-toast\";\r\n\r\nconst options = {\r\n  hideAfter: 1,\r\n  position: \"top-left\",\r\n}\r\n\r\nconst successToast = (text) => {\r\n  cogoToast.success(text, options);\r\n\r\n}\r\nconst errorToast = (text) => {\r\n  cogoToast.error(text, options);\r\n}\r\n\r\nexport {\r\n  successToast,\r\n  errorToast,\r\n}\r\n","import React from \"react\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { pokemonAdded, pokemonDeselected, pokemonRemoved } from '../../actions';\r\nimport PokemonInfo from \"../pokemon-info\";\r\nimport Spinner from \"../spinner\";\r\nimport { successToast, errorToast } from \"../../utilities\";\r\nimport \"./pokemon-details.css\";\r\n\r\n\r\nconst PokemonDetails = ({ buttonClassNames, buttonText, pokemon, deselectPokemon, detailsButtonHandler }) => {\r\n  return (\r\n    <div className=\"pokemon-details\">\r\n      <PokemonInfo onClose={deselectPokemon} pokemon={pokemon} />\r\n      <button onClick={detailsButtonHandler} className={buttonClassNames}>{buttonText}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PokemonDetailsWrapper = ({ history, match }) => {\r\n\r\n  const { loading, error, pokemon } = useSelector(state => state.pokemonDetails);\r\n  const dispatch = useDispatch();\r\n\r\n  const deselectPokemon = () => {\r\n    dispatch(pokemonDeselected());\r\n    history.push(`/library/${match.params.page}/`);\r\n  }\r\n\r\n  const inCollection = useSelector(\r\n    state =>\r\n      state.pokemonCollection.some(\r\n        item =>\r\n          item.id === pokemon?.id, shallowEqual\r\n      )\r\n  );\r\n\r\n  const detailsButtonHandler = () => {\r\n    return inCollection ?\r\n      removePokemon() :\r\n      addPokemon();\r\n  }\r\n  const removePokemon = () => {\r\n    dispatch(pokemonRemoved(pokemon.id));\r\n    errorToast(`${pokemon.name} was removed`);\r\n  }\r\n  const addPokemon = () => {\r\n    dispatch(pokemonAdded(pokemon));\r\n    successToast(`${pokemon.name} was added`);\r\n  }\r\n  const buttonText = inCollection ? \"Remove From Collection\" : \"Add To Collection\";\r\n  let buttonClassNames = \"btn\";\r\n  if (inCollection)\r\n    buttonClassNames += \" remove-btn\";\r\n\r\n  if (error) {\r\n    return <div>Error</div>;\r\n  }\r\n  if (loading) {\r\n    return <Spinner />\r\n  }\r\n  if (!pokemon) {\r\n    return <div>Select a Pokemon</div>;\r\n  }\r\n  return (\r\n    <PokemonDetails\r\n      inCollection={inCollection}\r\n      buttonText={buttonText}\r\n      deselectPokemon={deselectPokemon}\r\n      detailsButtonHandler={detailsButtonHandler}\r\n      pokemon={pokemon}\r\n      buttonClassNames={buttonClassNames} />\r\n  );\r\n};\r\n\r\nexport default withRouter(PokemonDetailsWrapper);","import PokemonItem from './pokemon-item';\r\n\r\nexport default PokemonItem;","import React from 'react';\r\nimport './pokemon-item.css';\r\n\r\nconst PokemonItem = ({isActive, item, loadPokemon }) => {\r\n  let classNames=\"pokemon-item\";\r\n  if(isActive)\r\n    classNames+=\" active\";\r\n  return <li onClick={loadPokemon} className={classNames}>{item.name}</li>;\r\n};\r\n\r\nexport default PokemonItem;","import React from 'react';\r\nexport const pokemonContext = React.createContext();\r\nexport const {\r\n  Provider: PokemonServiceProvider,\r\n  Consumer: PokemonServiceConsumer\r\n} = pokemonContext;","import SearchControl from './search-control';\r\n\r\nexport default SearchControl;","import React from 'react';\r\nimport './search-control.css';\r\n\r\nconst SearchControl = ({term, setTerm}) => {\r\n  return (\r\n    <div className=\"input-wrapper\">\r\n      <input\r\n        required\r\n        value={term}\r\n        onChange={(e) => setTerm(e.target.value)}\r\n        className=\"search-input\"\r\n        type=\"text\" />\r\n      <i onClick={()=>setTerm(\"\")} className=\"fas fa-times clear-input-icon\"></i>\r\n      <span className=\"custom-placeholder\">search by name</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchControl;","import TypesList from './types-list';\r\n\r\nexport default TypesList;","import React from 'react';\r\nimport './types-list.css';\r\n\r\nconst TypesList = ({ types, setFilterByType, filterByType }) => {\r\n  return (\r\n    <ul className=\"types-container\">\r\n      {types.map(({ id, name }) => {\r\n        return (<li\r\n          className={`type-selector ${name.toLowerCase()} type-icon icon-${name.toLowerCase()} ${filterByType === id ? \"active\" : \"\"}`}\r\n          key={id}\r\n          onClick={() => setFilterByType(id)}>{name}</li>);\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TypesList;","import FilterControl from \"./filter-control\";\r\n\r\nexport default FilterControl;","import React, { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from '../spinner';\r\nimport TypesList from '../types-list';\r\nimport \"./filter-control.css\";\r\n\r\nconst FilterControl = ({ setFilterByType, filterByType }) => {\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const { types, loading, error } = useSelector(state => state.allTypesList);\r\n  let typesList = null;\r\n  if (error)\r\n    typesList = <div>Error</div>;\r\n  if (loading)\r\n    typesList = <Spinner />;\r\n  if (!loading && showFilter)\r\n    typesList = (<TypesList\r\n      types={types}\r\n      setFilterByType={setFilterByType}\r\n      filterByType={filterByType} />);\r\n\r\n  const toggleFilter = () => {\r\n    if (showFilter)\r\n      setFilterByType(null);\r\n    setShowFilter(!showFilter);\r\n  }\r\n  return (\r\n    <div className=\"filter-control\">\r\n      <div className=\"filter-container\">\r\n        <span onClick={toggleFilter}\r\n          className={`toggle-filter ${showFilter ? \"active\" : \"\"}`}>\r\n          Types</span>\r\n        {typesList}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterControl;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPokemon, pokemonDeselected, fetchFilteredByTypesPokemons } from \"../../actions\";\r\nimport PokemonItem from '../pokemon-item';\r\nimport \"./pokemon-list.css\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Spinner from \"../spinner\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { pokemonContext } from '../pokemon-service-context';\r\nimport SearchControl from \"../search-control\";\r\nimport FilterControl from \"../filter-control\";\r\n\r\nconst PokemonListWrapper = props => {\r\n  const {\r\n    urlPage,\r\n    urlPokemon,\r\n    history,\r\n  } = props;\r\n  const pokemonService = useContext(pokemonContext);\r\n  const dispatch = useDispatch();\r\n  const { pokemons: allPokemons, loading: allPokemonsLoading, error: allPokemonsError } = useSelector(state => state.allPokemonsList);\r\n  const { filteredList, loading: filteredLoading, error: filteredError } = useSelector(state => state.filteredByTypeList);\r\n  let error;\r\n  let loading;\r\n  let pokemons;\r\n  const onPage = 10;\r\n  const initialPage = urlPage > 0 ? urlPage : 1;\r\n  const [page, setPage] = useState(initialPage - 1);\r\n  const [pageRange, setPageRange] = useState(3);\r\n  const [term, setTerm] = useState(\"\");\r\n  const [filterByType, setFilterByType] = useState(null);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const loadPokemon = (id) => {\r\n    dispatch(fetchPokemon(pokemonService)(id));\r\n  };\r\n  const loadFilteredByTypesPokemons = (id) => {\r\n    dispatch(fetchFilteredByTypesPokemons(pokemonService)(id));\r\n  }\r\n\r\n  const selectPokemon = (id) => {\r\n    history.push(id);\r\n  }\r\n  useEffect(() => {\r\n    if (filterByType)\r\n      loadFilteredByTypesPokemons(filterByType);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filterByType]);\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth < 916)\r\n      setPageRange(1);\r\n    else\r\n      setPageRange(3);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (urlPokemon)\r\n      loadPokemon(urlPokemon);\r\n    else\r\n      dispatch(pokemonDeselected());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [urlPokemon]);\r\n\r\n  useEffect(() => {\r\n    if (!urlPage) {\r\n      setPage(0);\r\n      history.push(\"/library/1/\");\r\n    }\r\n  }, [history, urlPage]);\r\n\r\n  const selectPage = ({ selected }) => {\r\n    setPage(selected);\r\n    history.push(`/library/${selected + 1}/${urlPokemon || \"\"}`);\r\n  };\r\n  if (filterByType) {\r\n    loading = filteredLoading;\r\n    error = filteredError;\r\n    pokemons = filteredList;\r\n  }\r\n  else {\r\n    loading = allPokemonsLoading;\r\n    error = allPokemonsError;\r\n    pokemons = allPokemons;\r\n  }\r\n  const onSearchChange = (value) => {\r\n    setTerm(value);\r\n    selectPage({ selected: 0 });\r\n  }\r\n  const onFilterByType = (value) => {\r\n    setFilterByType(value);\r\n    selectPage({ selected: 0 });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <SearchControl setTerm={onSearchChange} term={term} />\r\n      <FilterControl setFilterByType={onFilterByType} filterByType={filterByType} />\r\n      <PokemonListLogic error={error}\r\n        loading={loading}\r\n        pokemons={pokemons}\r\n        term={term}\r\n        onPage={onPage}\r\n        selectPokemon={selectPokemon}\r\n        urlPokemon={urlPokemon}\r\n        page={page}\r\n        setPageCount={setPageCount} />\r\n      <ReactPaginate\r\n        previousLabel='<'\r\n        nextLabel='>'\r\n        breakLabel='...'\r\n        breakClassName='break-me'\r\n        pageCount={pageCount}\r\n        marginPagesDisplayed={1}\r\n        pageRangeDisplayed={pageRange}\r\n        onPageChange={selectPage}\r\n        containerClassName='pagination'\r\n        activeClassName='active'\r\n        initialPage={page}\r\n        forcePage={page} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst PokemonListLogic = ({ loading,\r\n  error,\r\n  term,\r\n  pokemons,\r\n  onPage,\r\n  selectPokemon,\r\n  urlPokemon,\r\n  page,\r\n  setPageCount }) => {\r\n  let filteredPokemons;\r\n  let pageCount = 0;\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    pageCount = Math.ceil(filteredPokemons?.length / onPage);\r\n    setPageCount(pageCount);\r\n  });\r\n  if (error)\r\n    return <div>Error</div>;\r\n  if (loading)\r\n    return <Spinner />;\r\n  if (!pokemons.length)\r\n    return <div>List is empty</div>;\r\n  filteredPokemons = pokemons.filter(({ name }) => {\r\n    return name.toLowerCase().includes(term.toLowerCase());\r\n  });\r\n  if (!filteredPokemons.length)\r\n    return <div>no matching</div>;\r\n  const showPokemons = filteredPokemons.slice(page * onPage, (1 + page) * onPage);\r\n\r\n  if (!showPokemons.length)\r\n    return <div>page is not exist</div>;\r\n  return (\r\n    <PokemonList pokemons={showPokemons}\r\n      selectPokemon={selectPokemon}\r\n      urlPokemon={urlPokemon}\r\n      setPageCount={setPageCount}\r\n      pageCount={pageCount} />\r\n  );\r\n}\r\n\r\nconst PokemonList = ({\r\n  pokemons,\r\n  selectPokemon,\r\n  urlPokemon }) => {\r\n\r\n  return (\r\n    <ul className=\"pokemon-list\">\r\n      {pokemons.map(item => {\r\n        const isActive = urlPokemon === item.id;\r\n        return <PokemonItem isActive={isActive} loadPokemon={() => selectPokemon(item.id)} key={item.id} item={item} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(PokemonListWrapper);\r\n","import PokemonList from './pokemon-list';\r\n\r\nexport default PokemonList;","import React from \"react\";\r\nimport PokemonDetails from \"../pokemon-details/pokemon-details\";\r\nimport PokemonList from \"../pokemons-list\";\r\nimport \"./pokemon-library.css\";\r\n\r\nconst PokemonLibrary = ({urlPage, urlPokemon}) => {\r\n  return (\r\n    <div className=\"pokemon-library\">\r\n      <div className=\"list-wrapper\">\r\n        <PokemonList urlPage={urlPage} urlPokemon={urlPokemon} />\r\n      </div>\r\n\r\n      <div className=\"details-wrapper\">\r\n        <PokemonDetails urlPokemon={urlPokemon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonLibrary;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PokemonInfo from '../pokemon-info';\r\nimport { pokemonRemoved, allPokemonsRemoved } from \"../../actions\";\r\nimport \"./pokemon-collection.css\";\r\nimport { errorToast } from '../../utilities';\r\nimport SearchControl from '../search-control';\r\n\r\nconst PokemonCollectionWrapper = () => {\r\n  const dispatch = useDispatch();\r\n  const removePokemon = (id) => {\r\n    dispatch(pokemonRemoved(id));\r\n  }\r\n  const removeAllPokemons = () => {\r\n    dispatch(allPokemonsRemoved());\r\n  }\r\n\r\n  const pokemonCollection = useSelector(state => state.pokemonCollection);\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  if (pokemonCollection.length) {\r\n    const result = pokemonCollection.filter(({ name }) => {\r\n      return name.toLowerCase().includes(term.toLowerCase());\r\n    });\r\n\r\n    const handleRemovePokemon = (pokemon) => {\r\n      removePokemon(pokemon.id);\r\n      errorToast(`${pokemon.name} was removed`);\r\n    }\r\n\r\n    const handleRemoveAllPokemons = () => {\r\n      removeAllPokemons();\r\n      errorToast(`All pokemons were removed`);\r\n    }\r\n\r\n    const content = result.length ? <PokemonCollection\r\n      removePokemon={handleRemovePokemon}\r\n      pokemonCollection={result} /> : (<div>no matching</div>);\r\n\r\n    return (\r\n      <div className=\"pokemon-collection-wrapper\">\r\n        <button className=\"btn\" onClick={handleRemoveAllPokemons}>Delete All</button>\r\n        <SearchControl setTerm={setTerm} term={term}/>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>Collection is empty</div>\r\n  );\r\n};\r\n\r\nconst PokemonCollection = ({ removePokemon, pokemonCollection }) => {\r\n\r\n  const generateItems = (items) => {\r\n    return items.map((pokemon) => {\r\n      return <PokemonInfo\r\n        onClose={() => removePokemon(pokemon)}\r\n        key={pokemon.id}\r\n        pokemon={pokemon} />\r\n    });\r\n  };\r\n  return (\r\n    <ul className=\"pokemon-collection\">{generateItems(pokemonCollection)}</ul>\r\n  );\r\n};\r\n\r\nexport default PokemonCollectionWrapper;","import Header from './header';\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./header.css\";\r\nconst Header = () => {\r\n  const [opened, setOpened] = useState(false);\r\n  const toggleOpened = () => {\r\n    setOpened(opened => !opened);\r\n  }\r\n  let btnClassNames = \"menu-btn\";\r\n  let navClassNames = \"nav-list\";\r\n\r\n  if (opened) {\r\n    btnClassNames += \" opened\";\r\n    navClassNames += \" opened\";\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Link to=\"/\"><h1>PokeLib</h1></Link>\r\n      <nav>\r\n        <ul className={navClassNames}>\r\n          <li onClick={toggleOpened} className=\"nav-item\"><Link to=\"/library/\">Library</Link></li>\r\n          <li onClick={toggleOpened} className=\"nav-item\"><Link to=\"/collection/\">Collection</Link></li>\r\n          <li onClick={toggleOpened} className=\"nav-item\"><Link to=\"/game\">Game</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <div onClick={toggleOpened} className={btnClassNames}>\r\n        <div className=\"btn-burger\"></div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","export default function getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}","import QuestionCart from './question-cart';\r\n\r\nexport default QuestionCart;","import React from 'react';\r\nimport './question-cart.css';\r\n\r\nconst QuestionCart = ({ pokemon }) => {\r\n\r\n  if (!pokemon)\r\n    return null;\r\n  const types = pokemon.types.map((item) => {\r\n    return <li key={item}>{item}</li>\r\n  });\r\n  console.log(pokemon);\r\n  return (\r\n    <div className={`question-cart border-${pokemon.types[0]}`}>\r\n      <ul className=\"question-list\">\r\n        <li>Height: {pokemon.height}</li>\r\n        <li>Width: {pokemon.weight}</li>\r\n        <ul className=\"question-types\">\r\n          Types:\r\n           {types}\r\n        </ul>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionCart;","import AnswerItem from './answer-item';\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport './answer-item.css';\r\nconst AnswerItem = ({ pokemon, onSelect }) => {\r\n  return (\r\n    <li onClick={() => onSelect()} className=\"answer-item\">\r\n      <div className=\"answer-cart\">\r\n        <h2>{pokemon.name}</h2>\r\n        <img src={pokemon.frontDefault} alt=\"img\" />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AnswerItem;","import AnswerList from './answer-list';\r\n\r\nexport default AnswerList;","import React from 'react';\r\nimport AnswerItem from '../answer-item';\r\nimport './answer-list.css';\r\n\r\nconst AnswerList = ({ pokemons, onSelect }) => {\r\n  if (!pokemons.length)\r\n    return null;\r\n  const items = pokemons.map((pokemon) => {\r\n    return <AnswerItem onSelect={() => onSelect(pokemon.id)} key={pokemon.id} pokemon={pokemon} />;\r\n  });\r\n  return (\r\n    <ul className=\"answer-list\">\r\n      {items}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AnswerList;","import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { pokemonContext } from '../pokemon-service-context';\r\nimport getRandomInt from '../../utilities/get-random-int';\r\nimport { successToast, errorToast } from \"../../utilities\";\r\nimport Spinner from '../spinner';\r\nimport './pokemon-game.css';\r\nimport QuestionCart from '../question-cart';\r\nimport AnswerList from '../answer-list';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PokemonGame = () => {\r\n  const pokemonService = useContext(pokemonContext);\r\n  const { pokemons: allPokemons, loading, error } = useSelector(state => state.allPokemonsList);\r\n  const pokemonsInGameInitialState = {\r\n    pokemons: [],\r\n    question: null,\r\n    gameLoading: false,\r\n    gameError: false,\r\n  };\r\n  const [pokemonsInGame, setPokemonsInGame] = useState(pokemonsInGameInitialState);\r\n  const { pokemons, question, gameLoading, gameError } = pokemonsInGame;\r\n  const [score, setScore] = useState(0);\r\n  const [maxScore, setMaxScore] = useState(0);\r\n  const countOfAnswers = 5;\r\n  const mounted = useRef(null);\r\n  const [count, setCount] = useState(0);\r\n  const [allPokemonsInGame, setAllPokemonsInGame] = useState([]);\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n    return () => {\r\n      mounted.current = false;\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if (allPokemons.length)\r\n      setCount(Math.floor(allPokemons.length / 1.5));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allPokemons]);\r\n\r\n  useEffect(() => {\r\n    if (count)\r\n      setAllPokemonsInGame(allPokemons.slice(0, count));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [count]);\r\n\r\n  useEffect(() => {\r\n    if (allPokemonsInGame.length)\r\n      startGame();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allPokemonsInGame]);\r\n\r\n  const startGame = () => {\r\n    setScore(0);\r\n    if (score > maxScore)\r\n      setMaxScore(score);\r\n    nextRound();\r\n  }\r\n  const nextRound = () => {\r\n    setPokemonsInGame({\r\n      ...pokemonsInGameInitialState,\r\n      gameLoading: true,\r\n    });\r\n    loadRandomPokemons(countOfAnswers)\r\n      .then(({ pokemons, question }) => {\r\n        if (mounted.current)\r\n          setPokemonsInGame({\r\n            pokemons,\r\n            question,\r\n            gameLoading: false,\r\n            gameError: false,\r\n          });\r\n      })\r\n      .catch(() => {\r\n        if (mounted.current)\r\n          setPokemonsInGame({\r\n            ...pokemonsInGameInitialState,\r\n            gameError: true,\r\n            gameLoading: false,\r\n          });\r\n      });\r\n  };\r\n\r\n  const handleSelectPokemon = (id) => {\r\n    if (id === question.id) {\r\n      successToast(`Right answer!`);\r\n      setScore(score + 1);\r\n      nextRound();\r\n    }\r\n    else {\r\n      errorToast(`Wrong answer! It was ${question.name}`);\r\n      startGame();\r\n    }\r\n  }\r\n\r\n  const loadRandomPokemons = async (count) => {\r\n    const pokemonsIDs = [];\r\n    while (pokemonsIDs.length < count) {\r\n      const pokemonId = allPokemonsInGame[getRandomInt(allPokemonsInGame.length)].id;\r\n      if (!pokemonsIDs.includes(pokemonId))\r\n        pokemonsIDs.push(pokemonId);\r\n    }\r\n    const promises = pokemonsIDs.map(item => pokemonService.getPokemonDetails(item));\r\n    const pokemons = await Promise.all(promises);\r\n    const idx = getRandomInt(pokemons.length);\r\n    const question = pokemons[idx];\r\n    return {\r\n      pokemons,\r\n      question,\r\n    };\r\n  };\r\n\r\n\r\n  if (error)\r\n    return <div>Can't load all pokemons</div>;\r\n  if (loading)\r\n    return <Spinner />;\r\n\r\n\r\n  const generateContent = () => {\r\n    if (gameError)\r\n      return <div>Can't load random pokemons</div>;\r\n    if (gameLoading)\r\n      return <Spinner />;\r\n    return (\r\n      <>\r\n        <QuestionCart pokemon={question} />\r\n        <AnswerList onSelect={handleSelectPokemon} pokemons={pokemons} />\r\n      </>\r\n    );\r\n  };\r\n  const content = generateContent();\r\n  return (\r\n    <div className=\"pokemon-game\">\r\n      <span className=\"game-score\">Max Score: {maxScore}</span>\r\n      <span className=\"game-score\">Current Score: {score}</span>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonGame;","import React, { useEffect, useContext } from \"react\";\r\nimport \"./app.css\";\r\nimport { PokemonLibrary, PokemonCollection } from \"../pages/\";\r\nimport Header from \"../header\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PokemonGame from \"../pages/pokemon-game\";\r\nimport { pokemonContext } from '../pokemon-service-context';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchPokemons, fetchTypes } from \"../../actions\"\r\nfunction App() {\r\n\r\n  const pokemonService = useContext(pokemonContext);\r\n  const dispatch = useDispatch();\r\n  const loadPokemons = () => {\r\n    dispatch(fetchPokemons(pokemonService));\r\n    \r\n  };\r\n  useEffect(() => {\r\n    loadPokemons();\r\n    dispatch(fetchTypes(pokemonService));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" render={() => <div>Welcome to PokeLib</div>} exact />\r\n        <Route path=\"/library/\" exact component={PokemonLibrary} />\r\n        <Route path=\"/library/:page/\" exact render={({ match }) => {\r\n          const { page } = match.params;\r\n          return <PokemonLibrary urlPage={page} />\r\n        }} />\r\n        <Route path=\"/library/:page/:pokemon\" render={({ match }) => {\r\n          const { page, pokemon } = match.params;\r\n          return <PokemonLibrary urlPage={page} urlPokemon={pokemon} />\r\n        }} />\r\n        <Route path=\"/collection\" component={PokemonCollection} />\r\n        <Route path=\"/game\" component={PokemonGame} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './app';\r\n\r\nexport default App;","const hash = (...args) => {\r\n  return args.join();\r\n}\r\nconst cacheDecorator = (func) => {\r\n  let cache = new Map();\r\n  return function (...x) {\r\n    let key = hash(x);\r\n    if (cache.has(key)) {\r\n      return cache.get(key);\r\n    }\r\n    let result = func(...x);\r\n    cache.set(key, result);\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default cacheDecorator;","const updatePokemonList = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      loading: true,\r\n      error: false,\r\n      pokemons: {}\r\n    }\r\n  }\r\n  switch (action.type) {\r\n    case \"FETCH_POKEMONS_REQUEST\":\r\n      return {\r\n        pokemons: {},\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case \"FETCH_POKEMONS_SUCCESS\":\r\n      return {\r\n        pokemons: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    case \"FETCH_POKEMONS_FAILURE\":\r\n      return {\r\n        pokemons: {},\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state.allPokemonsList;\r\n  }\r\n}\r\n\r\nexport default updatePokemonList;","const updatePokemonDetails = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      loading: false,\r\n      error: false,\r\n      pokemon: null\r\n    }\r\n  }\r\n  switch (action.type) {\r\n    case \"FETCH_POKEMON_REQUEST\":\r\n      return {\r\n        pokemon: null,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case \"FETCH_POKEMON_SUCCESS\":\r\n      return {\r\n        pokemon: action.payload,\r\n        loading: false,\r\n        error: false,\r\n\r\n      };\r\n    case \"FETCH_POKEMON_FAILURE\":\r\n      return {\r\n        pokemon: null,\r\n        loading: false,\r\n        error: true,\r\n      }\r\n    case \"DESELECT_POKEMON\":\r\n      return {\r\n        loading: false,\r\n        error: false,\r\n        pokemon: null\r\n      }\r\n    default:\r\n      return state.pokemonDetails;\r\n  }\r\n}\r\n\r\nexport default updatePokemonDetails;","const updatePokemonCollection = (state, action) => {\r\n  if (state === undefined)\r\n    return [];\r\n  const { pokemonCollection } = state;\r\n  switch (action.type) {\r\n\r\n    case \"ADD_POKEMON_TO_COLLECTION\":\r\n      const pokemon = action.payload;\r\n      let hasPokemon = pokemonCollection.some(({ id }) => id === pokemon.id);\r\n      return hasPokemon ? pokemonCollection : [...pokemonCollection, pokemon];\r\n\r\n    case \"REMOVE_POKEMON_FROM_COLLECTION\":\r\n      const id = action.payload;\r\n      return pokemonCollection.filter((item) => item.id !== id);\r\n\r\n    case \"REMOVE_ALL_POKEMONS_FROM_COLLECTION\":\r\n      return [];\r\n\r\n    default:\r\n      return pokemonCollection;\r\n  }\r\n}\r\n\r\nexport default updatePokemonCollection;","const updateTypesList = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      loading: true,\r\n      error: false,\r\n      types: {}\r\n    }\r\n  }\r\n  switch (action.type) {\r\n    case \"FETCH_TYPES_REQUEST\":\r\n      return {\r\n        types: {},\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case \"FETCH_TYPES_SUCCESS\":\r\n      return {\r\n        types: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    case \"FETCH_TYPES_FAILURE\":\r\n      return {\r\n        types: {},\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state.allTypesList;\r\n  }\r\n}\r\n\r\nexport default updateTypesList;","const updateFiltereByTypeList = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      loading: true,\r\n      error: false,\r\n      filteredList: {}\r\n    }\r\n  }\r\n  switch (action.type) {\r\n    case \"FETCH_FILTERED_BY_TYPE_REQUEST\":\r\n      return {\r\n        filteredList: {},\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case \"FETCH_FILTERED_BY_TYPE_SUCCESS\":\r\n      return {\r\n        filteredList: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n    case \"FETCH_FILTERED_BY_TYPE_FAILURE\":\r\n      return {\r\n        filteredList: {},\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    default:\r\n      return state.filteredByTypeList;\r\n  }\r\n}\r\n\r\nexport default updateFiltereByTypeList;","import updatePokemonList from \"./update-pokemon-list\";\r\nimport updatePokemonDetails from \"./update-pokemon-details\";\r\nimport updatePokemonCollection from \"./update-pokemon-collection\";\r\nimport updateTypesList from './update-types-list';\r\nimport updateFiltereByTypeList from \"./update-filtered-by-type-list\";\r\n\r\nconst reducer = (state, action) => {\r\n  return {\r\n    allPokemonsList: updatePokemonList(state, action),\r\n    pokemonDetails: updatePokemonDetails(state, action),\r\n    pokemonCollection: updatePokemonCollection(state, action),\r\n    allTypesList: updateTypesList(state, action),\r\n    filteredByTypeList: updateFiltereByTypeList(state, action),\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore,applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { PokemonServiceProvider } from './components/pokemon-service-context';\r\nimport PokemonService from './services/pokemon-service';\r\nimport store from './store';\r\n\r\nimport './style.css';\r\n\r\nconst pokemonService = new PokemonService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PokemonServiceProvider value={pokemonService}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </PokemonServiceProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import cacheDecorator from '../utilities/cache-decorator';\r\n\r\nexport default class PokemonService {\r\n  _apiBase = 'https://pokeapi.co/api/v2/';\r\n\r\n  _extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n  }\r\n\r\n  _transformListItem = (item) => {\r\n    return {\r\n      id: this._extractId(item),\r\n      name: this._upFirstLetter(item.name),\r\n    }\r\n  }\r\n  _transfromPokemonStats = (stats) => {\r\n    return stats.map(({ base_stat, stat: { name } }) => {\r\n      return {\r\n        name: this._upFirstLetter(name),\r\n        stat: base_stat,\r\n      }\r\n    });\r\n  }\r\n  _upFirstLetter = (name) => {\r\n    return name[0].toUpperCase() + name.slice(1);\r\n  }\r\n  _transformPokemonDetails = (item) => {\r\n    return {\r\n      name: this._upFirstLetter(item.name),\r\n      weight: item.weight,\r\n      height: item.height,\r\n      backDefault: item.sprites.back_default,\r\n      frontDefault: item.sprites.front_default,\r\n      types: this._transformTypes(item.types),\r\n      id: item.id,\r\n      stats: this._transfromPokemonStats(item.stats),\r\n    }\r\n  }\r\n  _transformTypes = (types) => {\r\n    return types.map(({ type: { name } }) => name);\r\n  }\r\n\r\n  getPokemonDetails = async (id) => {\r\n    let response = await fetch(`${this._apiBase}pokemon/${id}/`);\r\n    let res = await response.json();\r\n    return this._transformPokemonDetails(res);\r\n  }\r\n  getPokemonDetails = cacheDecorator(this.getPokemonDetails);\r\n\r\n  getAllPokemons = async () => {\r\n    let response = await fetch(`${this._apiBase}pokemon`);\r\n    let res = await response.json();\r\n    const count = res.count;\r\n    response = await fetch(`${this._apiBase}pokemon?limit=${count}`);\r\n    res = await response.json();\r\n    return res.results.map(this._transformListItem);\r\n  }\r\n  getAllPokemons = cacheDecorator(this.getAllPokemons);\r\n\r\n  getAllTypes = async () => {\r\n    let response = await fetch(`${this._apiBase}type`);\r\n    let res = await response.json();\r\n    return res.results.map(this._transformListItem);\r\n  }\r\n  getAllTypes = cacheDecorator(this.getAllTypes);\r\n\r\n  getFilteredByTypePokemons = async (id) => {\r\n    let response = await fetch(`${this._apiBase}type/${id}`);\r\n    let res = await response.json();\r\n    return res.pokemon.map(({ pokemon }) => {\r\n      return this._transformListItem(pokemon);\r\n    });\r\n  };\r\n  getFilteredByTypePokemons = cacheDecorator(this.getFilteredByTypePokemons);\r\n}\r\n"],"sourceRoot":""}